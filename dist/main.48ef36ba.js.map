{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX,EAA4C;;AAC5C,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;AAEA,IAAIE,MAAM,+hDAAV,EAgDK;;AACL,IAAIC,OAAO,GAAG,EAAd,EACA;AACA;AACA;AACA;;AACA,IAAIC,CAAC,GAAG,CAAR,EAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACbC,EAAAA,UAAU,CAAC,YAAM;AACb,QAAIJ,MAAM,CAACE,CAAD,CAAN,KAAc,IAAlB,EAAwB;AACpB;AACAD,MAAAA,OAAO,IAAI,MAAX;AACH,KAHD,MAGO,IAAID,MAAM,CAACE,CAAD,CAAN,KAAc,GAAlB,EAAuB;AAC1BD,MAAAA,OAAO,IAAI,QAAX;AACH,KAFM,MAEA;AACH;AACAA,MAAAA,OAAO,IAAID,MAAM,CAACE,CAAD,CAAjB;AACH,KATY,CAUb;AACA;;;AACAN,IAAAA,IAAI,CAACS,SAAL,GAAiBJ,OAAjB;AACAF,IAAAA,KAAK,CAACM,SAAN,GAAkBL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBJ,CAApB,CAAlB;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,KAAnB,EAda,CAcc;;AAC3BZ,IAAAA,IAAI,CAACY,QAAL,CAAc,CAAd,EAAiB,KAAjB;;AACA,QAAIN,CAAC,GAAGF,MAAM,CAACS,MAAP,GAAgB,CAAxB,EAA2B;AACvBP,MAAAA,CAAC,IAAI,CAAL;AACAC,MAAAA,IAAI;AACJO,MAAAA,OAAO,CAACC,GAAR,CAAYT,CAAZ;AACH;AACJ,GArBS,EAqBP,CArBO,CAAV;AAsBH,CAvBD;;AAyBAC,IAAI","file":"main.48ef36ba.js","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector(\"#html\")  //通过css选择器找到\"\"内元素\r\nlet style = document.querySelector(\"#style\");\r\n\r\nlet string = `\r\n/* 你好，我是一名前端新人\r\n接下来我要添加样式了\r\n我要加的样式是 */   \r\nbody{\r\n    color: orange;\r\n}\r\n/* 接下来我要展示一下我的前端功底\r\n首先我要准备一个div */\r\n#div1{\r\n    border: 1px solid red;\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n/* 接下来我把 div 变成八卦图\r\n注意看好了\r\n首先,把 div变成一个圆 */\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n    border: none; \r\n}\r\n/* 八卦是阴阳形成的\r\n一黑一白 */\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 八卦转起来 */\r\n#div1::before{\r\n    width: 100px;\r\n    height: 100px;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #000;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width: 100px;\r\n    height: 100px;\r\n    bottom :0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n`;   // 如果不加注释,中文会影响body\r\nlet string2 = '';\r\n// string = string.replace(\"\\n\", \"<br>\");     //replace把\\n替换为<br>,但是只换第一个\r\n// string = string.replace(/\\n/g, \"<br>\");    //添加正则表达式,替换全部 \r\n// 但是这样会在替换的时候显示第一个<,因为它是一个一个的替换\r\n//在console.log里查看字符编码, 用.charCodeAt() ,用于识别空格回车\r\nlet n = 0;\r\n\r\n// html.innerHTML = n;  //innerHTML就是在HTML内写出\r\n// html.innerHTML = string.substring(0, n); //substring就是执行显示从0到n，而不会依次覆盖\r\n\r\n// setInterval(() => {\r\n//     n = n+1;\r\n//     html.innerHTML = n;\r\n// }, 1000);   //会一直执行代码，setTimeout只执行一次，但一般不用\r\n\r\n// let step = () => {\r\n//     setTimeout(() => {\r\n//         n = n + 1;\r\n//         html.innerHTML = n;\r\n//         if (n <= 10) {\r\n//             step();\r\n//         } else {\r\n//         }\r\n//     }, 1000);\r\n// }; \r\n// step();  //对比setInterval的好处是可以控制什么时候停\r\n\r\nlet step = () => {\r\n    setTimeout(() => {\r\n        if (string[n] === \"\\n\") {\r\n            //如果是回车,添加<br>\r\n            string2 += \"<br>\";\r\n        } else if (string[n] === \" \") {\r\n            string2 += \"&nbsp;\";\r\n        } else {\r\n            //如果不是回车,就照搬在string2里\r\n            string2 += string[n];\r\n        }\r\n        // string2 += (string[n] === \"\\n\" ? \"<br>\" : string[n])  //简化上面的代码\r\n        // html.innerHTML = string.substring(0, n);\r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0, n);\r\n        window.scrollTo(0, 99999); //自动滚动\r\n        html.scrollTo(0, 99999);\r\n        if (n < string.length - 1) {\r\n            n += 1;\r\n            step();\r\n            console.log(n)\r\n        }\r\n    }, 0);\r\n};\r\n\r\nstep();\r\n\r\n\r\n\r\n"]}